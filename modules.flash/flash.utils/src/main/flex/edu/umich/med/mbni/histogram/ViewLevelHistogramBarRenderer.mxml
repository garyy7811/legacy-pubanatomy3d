<?xml version="1.0"?>
<s:DataRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark"
                xmlns:components="spark.components.*" height="100%" width="100%">
    <fx:Script><![CDATA[
        [Bindable("dataChange")]
        public function get levelBar():ViewLevelHistogramBarData{
            return data as ViewLevelHistogramBarData;
        }

        override public function set data( value:Object ):void{
            if( value != data ){
                super.data = value;
            }
        }

        [Bindable("initialize")]
        public function get histogram():ViewLevelHistogram{
            return parentDocument as ViewLevelHistogram;
        }

        [Bindable]
        public var levelFrom:Number;
        [Bindable]
        public var levelTo:Number;

        private function set rfr( ignoreVar:* ):void{
            levelBar.model.rootModel.callInNext.putIn( refresh );
        }
        protected function refresh():void{
            if( levelBar == null ){
                return;
            }
            var hm:ModelLevelHistogram = levelBar.model;
            levelFrom = hm.levelMinimum + levelBar.index * hm.step;
            levelTo = levelFrom + hm.step;
        }
        ]]></fx:Script>
    <fx:Binding source="levelBar.outputBars.length" destination="rfr"/>
    <s:Rect width="100%" height="100%">
        <s:fill>
            <s:SolidColor color="{histogram.barBackground}"/>
        </s:fill>
    </s:Rect>
    <components:DataGroup dataProvider="{levelBar.outputBars}"
                          width="100%" height="100%"
                          itemRenderer="{histogram.barRendererLevelRenderer}">
        <components:layout>
            <s:HorizontalLayout verticalAlign="bottom" gap="1"/>
        </components:layout>
    </components:DataGroup>
</s:DataRenderer>
