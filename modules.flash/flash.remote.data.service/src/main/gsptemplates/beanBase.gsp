<%
    Set as3Imports = new TreeSet();

    if( jClass.hasEnumProperty() )
    as3Imports.add("org.granite.util.Enum");

    for( jImport in jClass.imports ){
        if( jImport.as3Type.hasPackage() && jImport.as3Type.packageName != jClass.as3Type.packageName )
        as3Imports.add(jImport.as3Type.qualifiedName);
    }

%>/**
 * Generated by Gas3 v${gVersion} (Granite Data Services).
 *
 * WARNING: DO NOT CHANGE THIS FILE. IT MAY BE OVERWRITTEN EACH TIME YOU USE
 * THE GENERATOR. INSTEAD, EDIT THE INHERITED CLASS (${jClass.as3Type.name}.as).
 */

package ${jClass.as3Type.packageName} {
<%
    ///////////////////////////////////////////////////////////////////////////////
    // Write Import Statements.

    for( as3Import in as3Imports ){ %>
import ${as3Import};<%
    }
    if( jClass.as3Superclass != null ){ %>
import ${jClass.as3Superclass.qualifiedName};<%
    }

    ///////////////////////////////////////////////////////////////////////////////
    // Write Class Declaration.  %>

[Bindable]
public class ${jClass.as3Type.name}Base<%

    boolean implementsWritten = false;
    if( jClass.superclass != null ){
%> extends ${jClass.superclass.as3Type.name}<%
    } else{
        if( jClass.as3Superclass != null ){
%> extends ${jClass.as3Superclass.name}<%
        }


    }

    for( jInterface in jClass.interfaces ){
        if( !implementsWritten ){
%> implements ${jInterface.as3Type.name}<%

        implementsWritten = true;
    } else{
%>, ${jInterface.as3Type.name}<%
        }
    }

%> {
    public function ${jClass.as3Type.name}Base(){
    }
<%

    ///////////////////////////////////////////////////////////////////////////
    // Write Public Fields.

    for( jProperty in jClass.properties ){
        if( jProperty instanceof org.granite.generator.as3.reflect.JavaMember ){ %>
    public var ${jProperty.name}:${jProperty.as3Type.name};<%
    }
    else{ %>
    public var ${jProperty.name}:${jProperty.as3Type.name};<%
        }
    }
%>
}

}